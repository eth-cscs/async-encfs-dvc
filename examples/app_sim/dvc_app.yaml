# app_sim version 1 app policy for DVC stage generation

app:
  name: &app_name app_sim_v1/sim_dataset_v1  # apps should always be versioned
  code_root: &code_root "\\$(git rev-parse --show-toplevel)/examples/app_sim"

  # defaults for MPI, can be overriden in merged mappings
  mpi_defaults: &mpi_defaults
    mpi_exec: mpiexec  # can be used to override default mpiexec if needed
    mpi_opts:
      -np: 2

  stages: # app-specific stages
    base_simulation:
      type: simulation_stage  # refers to included stage definition
      script: [*code_root, simulation.sh]
      input_simulation:  # parameterizes stage
        name: &input_simulation_app_name in/sim_dataset_v1/app_prep_v1
        stage: &input_simulation_app_stage auto
      extra_command_line_options:  # for script (not processed w.r.t. dvc_root_host)
        --simulation-output-file-num-per-rank: "{{ simulation_output_file_num_per_rank }}"
        --simulation-output-file-size: "{{ simulation_output_file_size }}"

      # set mpi_exec (optionally) and mpi_opts to run with MPI
      <<: *mpi_defaults

    simulation:
      type: simulation_stage # refers to included stage definition
      script: [*code_root, simulation.sh]
      input_simulation: # parameterizes stage
        name: &input_simulation_app_name app_sim_v1/sim_dataset_v1
        stage: &input_simulation_app_stage simulation
      extra_command_line_options:  # for script (not processed w.r.t. dvc_root_host)
        --simulation-output-file-num-per-rank: "{{ simulation_output_file_num_per_rank }}"
        --simulation-output-file-size: "{{ simulation_output_file_size }}"

      # set mpi_exec (optionally) and mpi_opts to run with MPI
      <<: *mpi_defaults


# include dvc-root/mounts and stage type information
include:
  dvc_root: '.dvc_policies/repo/dvc_root.yaml'
  simulation_stage: '.dvc_policies/stages/dvc_simulation.yaml'
