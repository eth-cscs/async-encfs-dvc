#!/usr/bin/env bash

set -euo pipefail

ENCFS_LAUNCH_DEBUGGING=0  # set to 1 for debugging

debug() {
    if [ "${ENCFS_LAUNCH_DEBUGGING}" -eq 1 ]; then
        "$@"
    fi
}

SCRIPT_NAME="$(basename "$0")"

log () {
    echo "${SCRIPT_NAME}: $1"
}

log_error () {
    log "$1"
    exit 1
}

debug set -x

if [ $# -eq 0 ]; then
    dvc_root_yaml="$(dvc root)/.dvc_policies/repo/dvc_root.yaml"
elif [ $# -eq 1 ] && [[ "$1" =~ .yaml ]]; then
    dvc_root_yaml="$1"
fi

encfs_dirs=()
while IFS= read -r line; do
    debug log ${line}
    encfs_dirs+=("${line}")
done <<< "$(python3 -m async_encfs_dvc.encfs_int.mount_config ${dvc_root_yaml})"

if [[ ${#encfs_dirs[@]} -ne 2 ]]; then
    log_error "Error: Found faulty encfs config with dirs ${encfs_dirs[*]}."
fi

DVC_ENCRYPT_DIR="$(eval echo "${encfs_dirs[0]}")"
DVC_DECRYPT_DIR="$(eval echo "${encfs_dirs[1]}")"

mkdir -p "${DVC_DECRYPT_DIR}"

if [ -x "$(command -v encfs)" ]; then
    ENCFS_BIN=encfs
elif [[ ! -z "${APPS+x}" && -d "${APPS}/UES/anfink/encfs" ]]; then
    ENCFS_BIN="${APPS}/UES/anfink/encfs/bin/encfs"
elif [[ ! -z "${ENCFS_INSTALL_DIR+x}" && -f "${ENCFS_INSTALL_DIR}/bin/encfs" ]]; then
    ENCFS_BIN="${ENCFS_INSTALL_DIR}/bin/encfs"
else
    log_error "Unable to locate encfs executable"
fi

set +x
[[ -n "${ENCFS_PW_FILE}" ]] && ENCFS_PW=$(eval cat ${ENCFS_PW_FILE})

log "Launching encfs for single-node operation: ${DVC_ENCRYPT_DIR} -> ${DVC_DECRYPT_DIR}"
log "Do not use this with SLURM!"
# with a newer version of docker and libfuse allow_root must be set, otherwise decrypt cannot be mounted inside a container
echo ${ENCFS_PW} | ${ENCFS_BIN} -o allow_root,max_write=1048576,big_writes -S -f "${DVC_ENCRYPT_DIR}" "${DVC_DECRYPT_DIR}"
